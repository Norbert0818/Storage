@page "/editproduct/{productId}"
@attribute [Authorize(Roles = "Admin, Manager")]

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IGetProductByIdUseCase GetProductByIdUseCase
@inject IEditProductUseCase EditProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@using Plugins.DataStore.MySQL
@inject DataContext dbContext

<h3>Edit Product</h3>
<br />
@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="category">Category</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.MaxQuantity" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="product-image">Image link</label>
            <InputText id="product-image" @bind-Value="product.ImageLink" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="product-description">Description</label>
            <InputTextArea id="product-description" @bind-Value="product.Description" class="form-control"></InputTextArea>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>

}


@code {
    [Parameter]
    public string ProductId { get; set; }

    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.ProductId, out int iProductId))
        {
            var prod = GetProductByIdUseCase.Execute(iProductId);
            this.product = new Product
                {
                    Id = prod.Id,
                    Name = prod.Name,
                    CategoryId = prod.CategoryId,
                    Price = prod.Price,
                    MaxQuantity = prod.MaxQuantity,
                    ImageLink = prod.ImageLink,
                    Description = prod.Description
                };
        }
    }

    private void OnValidSumit()
    {
        var currentMaxCapacity = dbContext.Products.Where(p => p.Id == product.Id).Select(p => p.MaxQuantity).FirstOrDefault();
        product.Quantity = product.MaxQuantity - currentMaxCapacity;
           
        EditProductUseCase.Execute(this.product);
        NavigationManager.NavigateTo("/editingproducts");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/editingproducts");
    }

}