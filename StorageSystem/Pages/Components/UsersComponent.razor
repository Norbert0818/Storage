@page "/users"
@*@attribute [Authorize(Roles = "Admin")]*@
@using Microsoft.AspNetCore.Identity

@inject IViewUsersUseCase ViewUsersUseCase
@inject UserManager<IdentityUser> UserManager

<h3>Users</h3>
@if (_users != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Phone number</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in _users)
            {
                <tr>
            <td>@user.Email</td>
            <td>@user.PhoneNumber</td>
            @if(userRoleDict.TryGetValue(user, out var role))
                {
                <td>@role</td>
                }
                else
                {
                <td></td>
                }
                </tr>
            }
            </tbody>
            </table>
            }

@code{
        private IEnumerable<IdentityUser>? _users;
        
    private Dictionary<IdentityUser, string> userRoleDict = new Dictionary<IdentityUser, string>();
        protected override async Task OnInitializedAsync()
        {
            _users = ViewUsersUseCase.Execute();
            foreach(var user in _users)
            {
                var roles = await UserManager.GetRolesAsync(user);
                userRoleDict.Add(user, roles.FirstOrDefault());
            }
        }
    }